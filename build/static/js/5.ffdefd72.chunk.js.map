{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js"],"names":["order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","react_default","a","createElement","style","textTransform","display","margin","border","key","className","Number","parseFloat","price","toFixed","Orders","componentDidMount","_this","onFetchOrders","token","userId","orders","Spinner","this","loading","Order_Order","id","React","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"8KA+BeA,UAzBF,SAACC,GACV,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC7BA,EAAYE,KAAK,CACbC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAGlC,IAAMI,EAAmBL,EAAYM,IAAI,SAAAC,GACrC,OACIC,EAAAC,EAAAC,cAAA,QACIC,MAAO,CAACC,cAAe,aAAcC,QAAS,eAAgBC,OAAQ,QAASC,OAAQ,kBAAmBC,IAAKT,EAAGJ,MACjHI,EAAGJ,KAFR,KAEgBI,EAAGH,OAFnB,OAOR,OACII,EAAAC,EAAAC,cAAA,OAAKO,UAAU,SACXT,EAAAC,EAAAC,cAAA,yBAAiBL,GACjBG,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAAA,cAASQ,OAAOC,WAAWpB,EAAMqB,OAAOC,QAAQ,GAAhD,oDCfhBC,6MAEFC,kBAAoB,WAChBC,EAAKzB,MAAM0B,cAAcD,EAAKzB,MAAM2B,MAAOF,EAAKzB,MAAM4B,iFAItD,IAAIC,EAASpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,MAYb,OAXKC,KAAK/B,MAAMgC,UACZH,EAASE,KAAK/B,MAAM6B,OAAOtB,IAAI,SAAAR,GAC3B,OACIU,EAAAC,EAAAC,cAACsB,EAAD,CACIhB,IAAKlB,EAAMmC,GACXjC,YAAaF,EAAME,YACnBoB,OAAQtB,EAAMsB,WAM1BZ,EAAAC,EAAAC,cAAA,WACKkB,UArBIM,IAAMC,WA0CZC,sBATS,SAACC,GACrB,MAAO,CACHT,OAAQS,EAAMvC,MAAM8B,OACpBG,QAASM,EAAMvC,MAAMiC,QACrBL,MAAOW,EAAMC,KAAKZ,MAClBC,OAAQU,EAAMC,KAAKX,SAXA,SAAAY,GACvB,MAAO,CACHd,cAAe,SAACC,EAAOC,GAAR,OAAmBY,EAASC,IAAmBd,EAAOC,OAa9DS,CAA6CK,YAAiBnB,EAAQoB","file":"static/js/5.ffdefd72.chunk.js","sourcesContent":["/**\r\n * Created by Galina on 4/9/2019.\r\n */\r\nimport React from 'react';\r\nimport './Order.css';\r\n\r\nconst order =(props) => {\r\n    const ingredients = [];\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount: props.ingredients[ingredientName]})\r\n    };\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return (\r\n            <span\r\n                style={{textTransform: 'capitalize', display: \"inline-block\", margin: '0 8px', border: '1px solid grey'}} key={ig.name}>\r\n                {ig.name} ({ig.amount})\r\n            </span>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div className=\"Order\">\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>{Number.parseFloat(props.price).toFixed(2)} USD</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default order;","/**\r\n * Created by Galina on 4/9/2019.\r\n */\r\nimport React from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends React.Component {\r\n\r\n    componentDidMount = () => {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    };\r\n\r\n    render () {\r\n        let orders = <Spinner/>;\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => {\r\n                return (\r\n                    <Order\r\n                        key={order.id}\r\n                        ingredients={order.ingredients}\r\n                        price={+order.price}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrder(token, userId))\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}