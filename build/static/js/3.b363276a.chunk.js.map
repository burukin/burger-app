{"version":3,"sources":["components/UI/Input/Input.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Spinner/Spinner.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","input","props","inputElement","inputClasses","invalid","shouldValidate","touched","push","elementType","a","createElement","Object","assign","className","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","label","checkoutSummary","react_default","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","spinner","ContactData","state","orderForm","name","type","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementID","_this","order","price","orderData","userId","onOrderBurger","token","checkValidity","rules","isValid","trim","length","inputChangedHandler","inputIdentifier","updatedFormElement","updateObject","target","updatedOrderForm","defineProperty","inputID","setState","_this2","this","formElementsArray","id","config","form","onSubmit","formElement","Input","e","disabled","loading","Spinner_Spinner","React","Component","connect","burgerBuilder","totalPrice","auth","dispatch","actions","withErrorHandler","axios","Checkout","checkoutCancelledHandler","history","goBack","checkoutContinuedHandler","replace","summary","react_router","to","purchasedRedirect","purchased","CheckoutSummary_CheckoutSummary","path","match","component"],"mappings":"0FAAA,IAAAA,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAC,EAAA,KAyDeG,IAnDD,SAACC,GACX,IAAIC,EAAe,KACbC,EAAe,CAAC,gBAMtB,OAJIF,EAAMG,SAAWH,EAAMI,gBAAkBJ,EAAMK,SAC/CH,EAAaI,KAAK,WAGdN,EAAMO,aACV,IAAM,QACFN,EAAeJ,EAAAW,EAAAC,cAAA,QAAAC,OAAAC,OAAA,CACXC,UAAWV,EAAaW,KAAK,MACzBb,EAAMc,cAFC,CAGXC,MAAOf,EAAMe,MACbC,SAAUhB,EAAMiB,WACpB,MACJ,IAAM,WACFhB,EAAeJ,EAAAW,EAAAC,cAAA,OAAAC,OAAAC,OAAA,CACXC,UAAWV,EAAaW,KAAK,MACzBb,EAAMc,cAFC,CAGXC,MAAOf,EAAMe,MACbC,SAAUhB,EAAMiB,WACpB,MACJ,IAAM,SACFhB,EACIJ,EAAAW,EAAAC,cAAA,UACIG,UAAWV,EAAaW,KAAK,KAC7BE,MAAOf,EAAMe,MACbC,SAAUhB,EAAMiB,SAEfjB,EAAMc,cAAcI,QAAQC,IAAI,SAAAC,GAAM,OACnCvB,EAAAW,EAAAC,cAAA,UAAQY,IAAKD,EAAOL,MAAOA,MAAOK,EAAOL,OAAQK,EAAOE,iBAIpE,MACJ,QACIrB,EAAeJ,EAAAW,EAAAC,cAAA,QAAAC,OAAAC,OAAA,CACXC,UAAWV,EAAaW,KAAK,MACzBb,EAAMc,cAFC,CAGXC,MAAOf,EAAMe,SAGzB,OACIlB,EAAAW,EAAAC,cAAA,OAAKG,UAAU,SACXf,EAAAW,EAAAC,cAAA,aAAQT,EAAMuB,OACbtB,sLC/BEuB,UAbS,SAACxB,GACrB,OACIyB,EAAAjB,EAAAC,cAAA,OAAKG,UAAU,mBACXa,EAAAjB,EAAAC,cAAA,qCACAgB,EAAAjB,EAAAC,cAAA,OAAKiB,MAAO,CAACC,MAAO,OAAQC,OAAQ,SAChCH,EAAAjB,EAAAC,cAACoB,EAAA,EAAD,CAAQC,YAAa9B,EAAM8B,eAE/BL,EAAAjB,EAAAC,cAACsB,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAASjC,EAAMkC,mBAAxC,UACAT,EAAAjB,EAAAC,cAACsB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAASjC,EAAMmC,mBAAzC,gDCNGC,SAJC,WACZ,OAAOX,EAAAjB,EAAAC,cAAA,OAAKG,UAAU,UAAf,wDCOLyB,6MACFC,MAAQ,CACJC,UAAW,CACPC,KAAM,CACFjC,YAAa,QACbO,cAAe,CACX2B,KAAM,OACNC,YAAa,aAEjB3B,MAAO,GACP4B,WAAY,CACRC,UAAS,GAEbC,OAAO,GAEXC,OAAQ,CACJvC,YAAa,QACbO,cAAe,CACX2B,KAAM,OACNC,YAAa,UAEjB3B,MAAO,GACP4B,WAAY,CACRC,UAAS,GAEbC,OAAO,EACPxC,SAAS,GAEb0C,QAAS,CACLxC,YAAa,QACbO,cAAe,CACX2B,KAAM,OACNC,YAAa,YAEjB3B,MAAO,GACP4B,WAAY,CACRC,UAAS,EACTI,UAAW,EACXC,UAAW,GAEfJ,OAAO,EACPxC,SAAS,GAEb6C,QAAS,CACL3C,YAAa,QACbO,cAAe,CACX2B,KAAM,OACNC,YAAa,WAEjB3B,MAAO,GACP4B,WAAY,CACRC,UAAS,GAEbC,OAAO,EACPxC,SAAS,GAEb8C,MAAO,CACH5C,YAAa,QACbO,cAAe,CACX2B,KAAM,QACNC,YAAa,eAEjB3B,MAAO,GACP4B,WAAY,CACRC,UAAS,GAEbC,OAAO,EACPxC,SAAS,GAEb+C,eAAgB,CACZ7C,YAAa,SACbO,cAAe,CACXI,QAAS,CACL,CAACH,MAAO,UAAWO,aAAc,WACjC,CAACP,MAAO,WAAYO,aAAc,cAG1CP,MAAO,UACP4B,WAAY,GACZE,OAAO,IAGfQ,aAAa,KAGjBC,aAAe,SAACC,GACZA,EAAMC,iBACN,IAAMC,EAAW,GACjB,IAAK,IAAIC,KAAiBC,EAAKrB,MAAMC,UACjCkB,EAASC,GAAiBC,EAAKrB,MAAMC,UAAUmB,GAAe3C,MAEjE,IAAM6C,EAAQ,CACV9B,YAAa6B,EAAK3D,MAAM8B,YACxB+B,MAAOF,EAAK3D,MAAM6D,MAClBC,UAAWL,EACXM,OAAQJ,EAAK3D,MAAM+D,QAExBJ,EAAK3D,MAAMgE,cAAcJ,EAAOD,EAAK3D,MAAMiE,UAG/CC,cAAgB,SAACnD,EAAOoD,GACpB,IAAIC,GAAU,EACd,OAAKD,IAGDA,EAAMvB,WACNwB,EAA2B,KAAjBrD,EAAMsD,QAAiBD,GAGjCD,EAAMnB,YACNoB,EAAUrD,EAAMuD,QAAUH,EAAMnB,WAAaoB,GAG7CD,EAAMlB,YACNmB,EAAUrD,EAAMuD,QAAUH,EAAMlB,WAAamB,GAE1CA,MAGXG,oBAAsB,SAAChB,EAAOiB,GAE1B,IAAMC,EAAqBC,YAAaf,EAAKrB,MAAMC,UAAUiC,GAAkB,CAC3EzD,MAAOwC,EAAMoB,OAAO5D,MACpB8B,MAAOc,EAAKO,cAAcX,EAAMoB,OAAO5D,MAAO4C,EAAKrB,MAAMC,UAAUiC,GAAiB7B,YACpFtC,SAAS,IAEPuE,EAAmBF,YAAaf,EAAKrB,MAAMC,UAAZ7B,OAAAmE,EAAA,EAAAnE,CAAA,GAChC8D,EAAkBC,IAEnBpB,GAAa,EACjB,IAAK,IAAIyB,KAAWF,EAChBvB,EAAcuB,EAAiBE,GAASjC,OAASQ,EAErDM,EAAKoB,SAAS,CAACxC,UAAWqC,EAAkBvB,YAAaA,6EAGnD,IAAA2B,EAAAC,KACAC,EAAoB,GAC1B,IAAK,IAAI7D,KAAO4D,KAAK3C,MAAMC,UACvB2C,EAAkB5E,KAAK,CACnB6E,GAAI9D,EACJ+D,OAAQH,KAAK3C,MAAMC,UAAUlB,KAIrC,IAAIgE,EACA5D,EAAAjB,EAAAC,cAAA,QAAM6E,SAAUL,KAAK3B,cAChB4B,EAAkB/D,IAAI,SAAAoE,GAAW,OAC9B9D,EAAAjB,EAAAC,cAAC+E,EAAA,EAAD,CACInE,IAAKkE,EAAYJ,GACjB5E,YAAagF,EAAYH,OAAO7E,YAChCO,cAAeyE,EAAYH,OAAOtE,cAClCC,MAAOwE,EAAYH,OAAOrE,MAC1BE,QAAS,SAACwE,GAAD,OAAKT,EAAKT,oBAAoBkB,EAAGF,EAAYJ,KACtDhF,SAAUoF,EAAYH,OAAOvC,MAC7BzC,eAAgBmF,EAAYH,OAAOzC,WACnCtC,QAASkF,EAAYH,OAAO/E,YAGpCoB,EAAAjB,EAAAC,cAACsB,EAAA,EAAD,CAAQC,QAAQ,UAAU0D,UAAWT,KAAK3C,MAAMe,aAAhD,UAMR,OAHI4B,KAAKjF,MAAM2F,UACXN,EAAQ5D,EAAAjB,EAAAC,cAACmF,EAAD,OAGRnE,EAAAjB,EAAAC,cAAA,OAAKG,UAAU,eACXa,EAAAjB,EAAAC,cAAA,qCACC4E,UAxKSQ,IAAMC,WA8LjBC,cAhBS,SAACzD,GACrB,MAAO,CACHR,YAAaQ,EAAM0D,cAAclE,YACjC+B,MAAOvB,EAAM0D,cAAcC,WAC3BN,QAASrD,EAAMsB,MAAM+B,QACrB1B,MAAO3B,EAAM4D,KAAKjC,MAClBF,OAAQzB,EAAM4D,KAAKnC,SAIA,SAAAoC,GACvB,MAAO,CACHnC,cAAe,SAACF,EAAWG,GAAZ,OAAsBkC,EAASC,IAAuBtC,EAAWG,OAIzE8B,CAA6CM,YAAiBhE,EAAaiE,MCnMpFC,6MACFC,yBAA2B,WACvB7C,EAAK3D,MAAMyG,QAAQC,YAGvBC,yBAA2B,WACvBhD,EAAK3D,MAAMyG,QAAQG,QAAQ,mGAI3B,IAAIC,EAAUpF,EAAAjB,EAAAC,cAACqG,EAAA,EAAD,CAAUC,GAAG,MAC3B,GAA+B,OAA3B9B,KAAKjF,MAAM8B,YAAsB,CACjC,IAAMkF,EAAoB/B,KAAKjF,MAAMiH,UAAYxF,EAAAjB,EAAAC,cAACqG,EAAA,EAAD,CAAUC,GAAG,MAAQ,KACtEF,EACIpF,EAAAjB,EAAAC,cAAA,WACKuG,EACDvF,EAAAjB,EAAAC,cAACyG,EAAD,CACIpF,YAAamD,KAAKjF,MAAM8B,YACxBI,kBAAmB+C,KAAKuB,yBACxBrE,kBAAmB8C,KAAK0B,2BAE5BlF,EAAAjB,EAAAC,cAACqG,EAAA,EAAD,CACIK,KAAMlC,KAAKjF,MAAMoH,MAAMD,KAAO,gBAC9BE,UAAWhF,KAI3B,OAAOwE,SA3BQhB,IAAMC,WAsCdC,sBAPS,SAACzD,GACrB,MAAO,CACHR,YAAaQ,EAAM0D,cAAclE,YACjCmF,UAAW3E,EAAMsB,MAAMqD,YAIhBlB,CAAyBQ","file":"static/js/3.b363276a.chunk.js","sourcesContent":["/**\r\n * Created by Galina on 4/16/2019.\r\n */\r\nimport React from 'react';\r\nimport './Input.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = ['InputElement'];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push('Invalid');\r\n    };\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed}/>;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <text\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed}/>;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}\r\n                >\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}/>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"Input\">\r\n            <label>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default input;","/**\r\n * Created by Galina on 4/9/2019.\r\n */\r\nimport React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport './CheckoutSummary.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className=\"CheckoutSummary\">\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>Cancel</Button>\r\n            <Button btnType=\"Success\" clicked={props.checkoutContinued}>Continue</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default checkoutSummary;","/**\r\n * Created by Galina on 4/2/2019.\r\n */\r\nimport React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst spinner = () => {\r\n    return <div className=\"Loader\">Loading...</div>\r\n};\r\n\r\nexport default spinner;","/**\r\n * Created by Galina on 4/9/2019.\r\n */\r\nimport React from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport './ContactData.css';\r\nimport axios from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner?';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport {connect} from 'react-redux';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\nimport {updateObject} from '../../../store/utility';\r\n\r\nclass ContactData extends React.Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required:true\r\n                },\r\n                valid: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required:true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required:true,\r\n                    minLength: 5,\r\n                    maxLength: 5\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required:true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required:true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false\r\n    };\r\n\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        const formData = {};\r\n        for (let formElementID in this.state.orderForm) {\r\n            formData[formElementID] = this.state.orderForm[formElementID].value;\r\n        }\r\n         const order = {\r\n             ingredients: this.props.ingredients,\r\n             price: this.props.price,\r\n             orderData: formData,\r\n             userId: this.props.userId\r\n         };\r\n        this.props.onOrderBurger(order, this.props.token);\r\n    };\r\n\r\n    checkValidity = (value, rules) => {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n        return isValid;\r\n    };\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n\r\n        const updatedFormElement = updateObject(this.state.orderForm[inputIdentifier], {\r\n            value: event.target.value,\r\n            valid: this.checkValidity(event.target.value, this.state.orderForm[inputIdentifier].validation),\r\n            touched: true\r\n        });\r\n        const updatedOrderForm = updateObject(this.state.orderForm, {\r\n            [inputIdentifier]: updatedFormElement\r\n        });\r\n        let formIsValid= true;\r\n        for (let inputID in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputID].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n    };\r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input\r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        changed={(e)=>this.inputChangedHandler(e, formElement.id)}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                    />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>Order</Button>\r\n            </form>\r\n        );\r\n        if (this.props.loading) {\r\n            form  = <Spinner />;\r\n        }\r\n        return (\r\n            <div className=\"ContactData\">\r\n                <h4>Enter your contact data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ingredients: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","/**\r\n * Created by Galina on 4/9/2019.\r\n */\r\nimport React from 'react';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport ContactData from './ContactData/ContactData';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Checkout extends React.Component {\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    };\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    };\r\n\r\n    render () {\r\n        let summary = <Redirect to=\"/\" />;\r\n        if (this.props.ingredients !== null) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\"/> : null;\r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary\r\n                        ingredients={this.props.ingredients}\r\n                        checkoutCancelled={this.checkoutCancelledHandler}\r\n                        checkoutContinued={this.checkoutContinuedHandler}\r\n                    />\r\n                    <Route\r\n                        path={this.props.match.path + \"/contact-data\"}\r\n                        component={ContactData}/>\r\n                </div>\r\n            );\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ingredients: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Checkout);"],"sourceRoot":""}